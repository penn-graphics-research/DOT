//
//  Sphere.cpp
//  FracCuts
//
//  Created by Minchen Li on 10/24/18.
//  Copyright Â© 2018 Minchen Li. All rights reserved.
//

#include "Sphere.hpp"

namespace FracCuts
{
    template<int dim>
    Sphere<dim>::Sphere(const Eigen::Matrix<double, dim, 1>& origin,
                        double p_radius, double p_stiffness, double p_friction)
    {
        Base::origin = origin;
        radius = p_radius;
        radius2 = p_radius * p_radius;
        
        Base::stiffness = p_stiffness;
        Base::friction = p_friction;
        
        initRenderingData();
    }
    
    template<int dim>
    void Sphere<dim>::updateConstraints_OSQP(const TriangleSoup<dim>& mesh,
                                             std::vector<Eigen::Triplet<double>>& A_triplet,
                                             Eigen::VectorXd& l) const
    {
        A_triplet.reserve(A_triplet.size() + Base::activeSet.size() * dim);
        int constraintI = l.size();
        for(const auto& vI : Base::activeSet) {
            Eigen::Matrix<double, dim, 1> jacobianI = 2 * (mesh.V.row(vI).transpose() -
                                                           Base::origin);
            A_triplet.emplace_back(constraintI, vI * dim, jacobianI[0]);
            A_triplet.emplace_back(constraintI, vI * dim + 1, jacobianI[1]);
            //cylinder
//            if(dim == 3) {
//                A_triplet.emplace_back(constraintI, vI * dim + 2, jacobianI[2]);
//            }
            ++constraintI;
        }
        
        evaluateConstraints(mesh, l, -1.0);
    }
    
    template<int dim>
    void Sphere<dim>::evaluateConstraints(const TriangleSoup<dim>& mesh,
                                          Eigen::VectorXd& val, double coef) const
    {
        int constraintI = val.size();
        val.conservativeResize(constraintI + Base::activeSet.size());
        for(const auto& vI : Base::activeSet) {
            //sphere
//            val[constraintI] = coef * ((mesh.V.row(vI).transpose() -
//                                        Base::origin).squaredNorm() - radius2);
            //cylinder
            val[constraintI] = coef * ((mesh.V.row(vI).transpose() -
                                        Base::origin).topRows(2).squaredNorm() - radius2);
            ++constraintI;
        }
    }
    template<int dim>
    void Sphere<dim>::evaluateConstraints_all(const TriangleSoup<dim>& mesh,
                                              Eigen::VectorXd& val, double coef) const
    {
        int constraintI = val.size();
        val.conservativeResize(constraintI + mesh.V.rows());
        for(int vI = 0; vI < mesh.V.rows(); vI++) {
            //sphere
//            val[constraintI] = coef * ((mesh.V.row(vI).transpose() -
//                                        Base::origin).squaredNorm() - radius2);
            //cylinder
            val[constraintI] = coef * ((mesh.V.row(vI).transpose() -
                                        Base::origin).topRows(2).squaredNorm() - radius2);
            ++constraintI;
        }
    }
    
    template<int dim>
    void Sphere<dim>::leftMultiplyConstraintJacobianT(const TriangleSoup<dim>& mesh,
                                                      const Eigen::VectorXd& input,
                                                      Eigen::VectorXd& output_incremental) const
    {
        assert(input.size() == Base::activeSet.size());
        assert(output_incremental.size() == mesh.V.rows() * dim);
        
        int constraintI = 0;
        for(const auto& vI : Base::activeSet) {
            Eigen::Matrix<double, dim, 1> jacobianI = 2 * (mesh.V.row(vI).transpose() -
                                                           Base::origin);
            //cylinder
            jacobianI[2] = 0.0;
            output_incremental.segment<dim>(vI * dim) += input[constraintI] * jacobianI;
            ++constraintI;
        }
    }
    
    template<int dim>
    void Sphere<dim>::filterSearchDir_OSQP(const TriangleSoup<dim>& mesh,
                                           Eigen::VectorXd& searchDir)
    {
        for(int vI = 0; vI < mesh.V.rows(); vI++) {
            Eigen::Matrix<double, dim, 1> fromOrigin = (mesh.V.row(vI).transpose() +
                                                        searchDir.segment<dim>(vI * dim) -
                                                        Base::origin);
            //cylinder
            fromOrigin[2] = 0.0;
            double dist2ToOrigin = fromOrigin.squaredNorm();
            if(dist2ToOrigin < radius2) {
                Base::activeSet_next.insert(vI);
                searchDir.segment<dim>(vI * dim) += (fromOrigin *
                                                     (radius / std::sqrt(dist2ToOrigin) - 1.0));
            }
            //TODO: how to shrink active set?
        }
    }
    
    template<int dim>
    void Sphere<dim>::addSoftPenalty(std::vector<double>& energyParams,
                                     std::vector<Energy<DIM>*>& energTerms) const
    {
        //TODO: penalty term
    }
    
    template<int dim>
    void Sphere<dim>::outputConfig(std::ostream& os) const
    {
        os << "sphere  " << Base::origin[0] << " " << Base::origin[1] << " ";
        if(dim == 3) {
            os << Base::origin[2] << " ";
        }
        os << " " << radius << " ";
        os << " " << Base::stiffness << "  " << Base::friction << std::endl;
    }
    
    template<int dim>
    void Sphere<dim>::initRenderingData(double extensionScale)
    {
        Base::V.resize(382, 3);
        Base::V << -1.802860e-01, 5.297774e+00, 2.008390e-01, -5.710750e-01, 5.244929e+00, -5.085450e-01, -2.267670e-01, 5.186878e+00, 1.072294e+00, -6.570850e-01, 5.020096e+00, 1.574381e+00, 5.992650e-01, 5.216390e+00, -7.072360e-01, 1.316928e+00, 4.980480e+00, -1.211640e+00, 3.100590e-01, 4.841648e+00, -2.144159e+00, 2.531933e+00, 4.556802e+00, 9.768390e-01, 3.020849e+00, 4.332932e+00, 3.189580e-01, 2.462463e+00, 4.672050e+00, -3.732930e-01, 1.406309e+00, 5.096723e+00, -3.615040e-01, 1.788811e+00, 4.970076e+00, 3.209960e-01, 1.059443e+00, 5.140886e+00, 8.109610e-01, -1.614222e+00, 4.925303e+00, -1.136070e+00, -2.555498e+00, 4.598940e+00, -5.219620e-01, -2.282728e+00, 4.771500e+00, 1.591280e-01, -1.654823e+00, 5.027032e+00, -2.325640e-01, 4.303188e+00, 2.925568e+00, 9.945980e-01, 4.580446e+00, 1.818548e+00, 1.912642e+00, 4.149636e+00, 2.575928e+00, 2.018641e+00, 5.090218e+00, 1.177671e+00, 8.348790e-01, 4.949840e+00, 7.620720e-01, 1.683106e+00, 5.115773e+00, 1.262670e-01, 1.300897e+00, 4.783870e+00, 2.036463e+00, 9.499060e-01, -5.082345e+00, 1.457234e+00, 2.374700e-02, -5.250168e+00, 6.731270e-01, -2.029200e-02, -5.185012e+00, 4.554240e-01, 9.182750e-01, -5.262305e+00, -5.108060e-01, 3.073900e-02, -5.192545e+00, -7.245610e-01, 6.771920e-01, -4.962910e+00, 1.438645e+00, 1.156995e+00, -8.647620e-01, 1.657549e+00, -4.947644e+00, -1.488289e+00, 1.127055e+00, -4.958782e+00, -2.214250e+00, 4.626290e-01, -4.788660e+00, -2.368710e+00, 1.282956e+00, -4.544210e+00, -2.026859e+00, 2.138555e+00, -4.398100e+00, 4.729629e+00, 2.420830e-01, 2.346136e+00, 4.552926e+00, 1.074135e+00, 2.459193e+00, 4.212423e+00, 5.112560e-01, 3.169396e+00, 4.268767e+00, -4.242290e-01, 3.085182e+00, 4.835909e+00, -3.984620e-01, 2.110417e+00, -6.523080e-01, -4.220969e+00, 3.121736e+00, -1.590306e+00, -4.238855e+00, 2.742402e+00, -9.710030e-01, -4.806093e+00, 1.989576e+00, -1.893484e+00, -4.619493e+00, 1.772313e+00, 4.877200e-02, -4.942300e+00, 1.925776e+00, 2.059900e-01, -5.141514e+00, 1.254485e+00, -3.041090e-01, -4.703125e+00, 2.399991e+00, 6.131270e-01, -4.468020e+00, 2.771056e+00, 2.347190e-01, -4.151699e+00, 3.280782e+00, 2.527840e-01, -5.294554e+00, 3.301300e-02, 1.293131e+00, -5.131814e+00, -8.236100e-02, 7.913310e-01, -5.179585e+00, -7.846330e-01, 1.946136e+00, -4.881241e+00, 6.797340e-01, 8.895260e-01, -5.158531e+00, 7.993160e-01, -1.537738e+00, 5.014218e+00, 7.921630e-01, -2.063716e+00, 4.550665e+00, 1.744602e+00, 3.402070e-01, 4.736801e+00, 2.353747e+00, 7.005750e-01, 5.063274e+00, 1.374881e+00, -4.748080e-01, 5.004435e+00, -1.696568e+00, -6.297510e-01, 4.611051e+00, 2.516535e+00, -8.209900e-02, 4.131738e+00, 3.303536e+00, 9.587550e-01, 4.336398e+00, 2.892006e+00, 1.724957e+00, 4.666941e+00, 1.822274e+00, 2.781763e+00, 4.385311e+00, -1.010001e+00, 2.136789e+00, 4.655560e+00, -1.319699e+00, 1.412651e+00, 4.714591e+00, -1.967251e+00, -3.031847e+00, 4.327380e+00, 3.531930e-01, -3.421002e+00, 4.020172e+00, -3.773310e-01, -2.896379e+00, 4.241693e+00, -1.285680e+00, -3.566411e+00, 3.765192e+00, -1.037522e+00, -4.645851e+00, 2.551077e+00, 1.264900e-02, -3.895376e+00, 3.569848e+00, 2.360970e-01, -3.740331e+00, 3.632708e+00, 1.001695e+00, -2.858979e+00, 4.074285e+00, 1.786766e+00, -2.617191e+00, 4.497016e+00, 9.572200e-01, -3.746800e+00, 3.295634e+00, 1.799112e+00, -2.998647e+00, 3.522316e+00, 2.564909e+00, -2.126606e+00, 4.120725e+00, 2.556845e+00, -1.272359e+00, 4.633959e+00, 2.228959e+00, -1.882175e+00, 3.811416e+00, 3.169630e+00, -2.195910e+00, 3.268387e+00, 3.536274e+00, -1.376469e+00, 3.275738e+00, 3.918666e+00, -7.648980e-01, 3.906540e+00, 3.487692e+00, -4.841210e-01, 3.167642e+00, 4.220810e+00, 5.452890e-01, 3.573075e+00, 3.860883e+00, 1.531146e+00, 3.852244e+00, 3.294872e+00, 2.408316e+00, 3.330575e+00, 3.341767e+00, 1.305333e+00, 3.244664e+00, 3.968044e+00, 2.703420e+00, 3.513827e+00, 2.892525e+00, 2.034076e+00, 4.163332e+00, 2.557003e+00, 3.260212e+00, 3.713195e+00, 1.887837e+00, 2.606133e+00, 4.191322e+00, 1.894990e+00, 3.548436e+00, 3.126631e+00, 2.384711e+00, 3.353416e+00, 4.025248e+00, 7.287490e-01, 3.751512e+00, 3.578566e+00, 1.064058e+00, 3.965943e+00, 3.493688e+00, 2.560600e-02, 3.518546e+00, 3.904336e+00, -7.539890e-01, 1.920983e+00, 4.040934e+00, -2.839030e+00, 2.858669e+00, 3.997713e+00, -1.991981e+00, 1.201877e+00, 4.424209e+00, -2.658014e+00, 1.558311e+00, 3.474907e+00, -3.682873e+00, 3.719860e-01, 3.993838e+00, -3.464762e+00, 5.417460e-01, 2.834333e+00, -4.440465e+00, -3.831280e-01, 4.400712e+00, -2.911740e+00, -1.106910e+00, 3.878896e+00, -3.437895e+00, -1.238330e+00, 4.699713e+00, -2.130165e+00, -1.846660e+00, 4.162070e+00, -2.695647e+00, -2.665075e+00, 3.958856e+00, -2.291831e+00, -2.195768e+00, 4.461985e+00, -1.811712e+00, 3.843340e+00, 3.211513e+00, -1.689744e+00, 3.416484e+00, 3.158149e+00, -2.517922e+00, 2.659710e+00, 3.371245e+00, -3.101172e+00, -3.506680e-01, 3.309953e+00, -4.122413e+00, -1.041802e+00, 2.801335e+00, -4.370867e+00, -1.676040e-01, 2.363154e+00, -4.721258e+00, -1.912648e+00, 2.923561e+00, -3.967448e+00, -2.217998e+00, 3.419189e+00, -3.381986e+00, -2.998118e+00, 3.077112e+00, -3.072382e+00, -3.567220e+00, 3.361012e+00, -1.993531e+00, -4.653709e+00, 2.437224e+00, -6.470420e-01, -4.782629e+00, 2.095614e+00, 8.340410e-01, -4.469272e+00, 2.535458e+00, 1.252070e+00, -3.337044e+00, 2.853839e+00, 2.956076e+00, -2.726413e+00, 2.604318e+00, 3.709670e+00, -2.105814e+00, 2.526587e+00, 4.147499e+00, -1.499299e+00, 2.161884e+00, 4.603030e+00, -6.773900e-02, 1.834090e+00, 4.956640e+00, -9.738030e-01, 1.753561e+00, 4.899306e+00, -9.580000e-02, 2.627788e+00, 4.589588e+00, 8.224530e-01, 2.563794e+00, 4.558838e+00, -7.171380e-01, 9.028740e-01, 5.155579e+00, 8.339590e-01, 1.781147e+00, 4.909674e+00, 1.384428e+00, 2.388437e+00, 4.508600e+00, 2.360493e+00, 1.805787e+00, 4.373511e+00, 1.923343e+00, 2.771346e+00, 4.066978e+00, 2.978735e+00, 1.305879e+00, 4.168982e+00, 2.747556e+00, 2.378192e+00, 3.836731e+00, 3.326043e+00, 1.932010e+00, 3.619222e+00, 3.263740e+00, 2.557636e+00, 3.282336e+00, 3.920963e+00, 2.402329e+00, -2.632342e+00, 3.456219e+00, 2.147572e+00, -3.395289e+00, 2.685549e+00, 2.552123e+00, -3.772393e+00, 1.606021e+00, 2.670992e+00, -4.282953e+00, -3.720413e+00, 2.620411e+00, -2.732273e+00, -4.312845e+00, 2.455252e+00, -1.853719e+00, -4.125498e+00, 3.204916e+00, -9.053390e-01, -4.451672e+00, 2.058645e+00, 1.975157e+00, -4.210425e+00, 1.090735e+00, 3.004066e+00, -4.959140e+00, 5.063260e-01, 1.749401e+00, -4.635343e+00, 9.228100e-01, 2.394894e+00, -4.034225e+00, 2.061203e+00, 2.728819e+00, -3.358171e+00, 2.319236e+00, 3.360876e+00, 4.647524e+00, 2.528108e+00, 5.952200e-02, 5.036697e+00, 1.596813e+00, -9.504700e-02, 4.777987e+00, 2.150329e+00, -6.967460e-01, 3.928483e+00, 3.471389e+00, -7.131770e-01, 4.644296e+00, 2.100856e+00, -1.412151e+00, 4.365683e+00, 2.808259e+00, -1.055333e+00, 4.371076e+00, 2.106037e+00, -2.097862e+00, 1.646540e+00, 1.777999e+00, -4.699377e+00, 2.981998e+00, 1.722078e+00, -4.008859e+00, 2.353843e+00, 1.825618e+00, -4.365829e+00, 3.061301e+00, 7.736560e-01, -4.248528e+00, 2.386085e+00, 5.600800e-01, -4.684674e+00, 1.816564e+00, 6.025720e-01, -4.943568e+00, 1.173036e+00, 1.090489e+00, -5.029881e+00, 8.566410e-01, 1.953462e+00, -4.835649e+00, 1.865630e-01, 1.338404e+00, -5.119798e+00, -5.041869e+00, 1.362394e+00, -8.331080e-01, -2.612921e+00, 1.458170e+00, 4.355959e+00, -2.321069e+00, 7.831230e-01, 4.699817e+00, -1.500603e+00, 5.746300e-01, 5.033255e+00, -1.738874e+00, -3.001820e-01, 4.982757e+00, 3.671642e+00, 1.139705e+00, 3.629017e+00, 3.978377e+00, 1.986254e+00, 2.869724e+00, 4.694660e+00, 4.463380e-01, -2.388243e+00, 4.511784e+00, 1.415670e+00, -2.380390e+00, 4.159077e+00, 1.284892e+00, -3.004425e+00, 4.266190e+00, 3.341620e-01, -3.106235e+00, 3.781231e+00, -1.530720e-01, -3.713260e+00, 3.666515e+00, 9.374100e-01, -3.690548e+00, -4.971760e-01, 8.437230e-01, -5.185413e+00, -1.758900e-02, 1.186890e-01, -5.282371e+00, -2.762355e+00, 2.443645e+00, -3.781121e+00, -3.055465e+00, 1.510634e+00, -4.043458e+00, -3.685675e+00, 7.783730e-01, -3.700105e+00, -3.512310e+00, 2.045252e+00, -3.402208e+00, -4.310475e+00, 1.664438e+00, -2.560946e+00, -4.796997e+00, 1.642471e+00, -1.520209e+00, -4.720520e+00, 8.365080e-01, -2.222877e+00, -4.156546e+00, 1.022931e+00, -3.096148e+00, -4.421027e+00, 1.245480e-01, -2.913900e+00, -5.004505e+00, -7.316420e-01, 1.552118e+00, -3.710130e+00, 1.148613e+00, 3.602908e+00, -3.699965e+00, -4.557460e-01, 3.752310e+00, -3.111317e+00, 1.613284e+00, 3.958575e+00, -3.020753e+00, -4.649090e-01, 4.310126e+00, -3.096890e+00, 4.664650e-01, 4.257894e+00, -1.947165e+00, -1.299312e+00, 4.734442e+00, -8.885630e-01, -1.093454e+00, 5.098554e+00, -7.641950e-01, -1.222490e-01, 5.226588e+00, 1.661152e+00, 1.443091e+00, 4.804879e+00, 1.056444e+00, 9.141220e-01, 5.094933e+00, 8.800610e-01, -1.167423e+00, 5.078634e+00, 9.080790e-01, 2.040300e-02, 5.212529e+00, 1.643207e+00, -2.270100e-02, 5.035266e+00, 8.331100e-02, 4.809110e-01, 5.276112e+00, 8.524000e-03, -7.441220e-01, 5.236516e+00, 2.358227e+00, 3.851770e-01, 4.722301e+00, 3.121670e+00, 4.152050e-01, 4.243515e+00, 3.712514e+00, 3.026090e-01, 3.747952e+00, 3.732146e+00, -8.747430e-01, 3.649516e+00, 4.951278e+00, 9.874100e-01, -1.598863e+00, 5.021921e+00, 7.168100e-02, -1.656465e+00, 4.318573e+00, -4.856070e-01, -3.020635e+00, 5.271438e+00, 4.227180e-01, 2.332630e-01, 5.107028e+00, 1.099624e+00, -8.090360e-01, 5.242252e+00, -9.299800e-02, -7.039890e-01, 4.873363e+00, -8.622120e-01, -1.862913e+00, 1.412959e+00, -5.715460e-01, -5.070210e+00, 8.702840e-01, 2.688690e-01, -5.207758e+00, 2.280500e-02, -8.443390e-01, -5.229277e+00, -8.114040e-01, -9.878910e-01, -5.133231e+00, -1.188152e+00, -5.562200e-02, -5.154690e+00, -3.013509e+00, 8.150140e-01, -4.261442e+00, -3.686146e+00, -2.435460e-01, -3.782161e+00, -4.990588e+00, -1.504308e+00, 8.571250e-01, -4.741578e+00, -1.768373e+00, 1.517942e+00, -4.512534e+00, -1.551226e+00, 2.275471e+00, -4.742578e+00, -4.405910e-01, 2.313429e+00, -4.297533e+00, 1.283610e-01, 3.087792e+00, -3.018923e+00, -1.322016e+00, 4.137252e+00, -2.529551e+00, -7.646940e-01, 4.585452e+00, -1.214843e+00, -1.736079e+00, 4.843568e+00, 2.382679e+00, -9.660700e-01, 4.626983e+00, 3.094507e+00, -7.436670e-01, 4.235466e+00, 3.436422e+00, -1.728639e+00, 3.630191e+00, 5.237083e+00, -6.704180e-01, 1.041710e-01, 5.073873e+00, -1.497195e+00, -3.659400e-02, 5.044063e+00, -1.378553e+00, -8.109830e-01, 4.603899e+00, -2.099242e+00, -1.568552e+00, 4.227896e+00, -2.359200e+00, -2.136164e+00, 3.841204e+00, -2.199066e+00, -2.889347e+00, 4.266696e+00, -1.334651e+00, -2.836924e+00, 3.498225e+00, -1.555671e+00, -3.645206e+00, 2.827732e+00, -1.689842e+00, -4.132922e+00, 2.454941e+00, -6.102240e-01, -4.647641e+00, 3.110458e+00, -5.455750e-01, -4.244197e+00, 2.155213e+00, -1.533919e+00, -4.586736e+00, 1.535218e+00, -1.431924e+00, -4.853089e+00, -1.661420e+00, -9.518290e-01, -4.938374e+00, -2.256006e+00, -1.852575e+00, -4.403328e+00, -2.414937e+00, -1.003178e+00, -4.593051e+00, -3.102222e+00, -9.316140e-01, -4.174799e+00, -3.020095e+00, -2.783300e-02, -4.332222e+00, -4.903421e+00, -6.847870e-01, -1.897665e+00, -5.065716e+00, 1.739650e-01, -1.515457e+00, -5.160633e+00, -8.933980e-01, -7.308290e-01, -5.214793e+00, 2.937720e-01, -8.096650e-01, -5.032812e+00, -1.585615e+00, 6.905600e-02, -4.733828e+00, -2.229481e+00, 7.325910e-01, -4.579744e+00, -2.668452e+00, 6.161900e-02, -3.917084e+00, -3.520458e+00, 5.714040e-01, -4.244378e+00, -2.851277e+00, 1.345982e+00, -4.230030e+00, -2.440531e+00, 2.011501e+00, -4.193831e+00, -1.014838e+00, 3.056123e+00, -3.781040e+00, -3.134026e+00, 1.945011e+00, -3.156388e+00, -3.206967e+00, 2.791936e+00, -3.948695e+00, -2.096457e+00, 2.840041e+00, -3.536326e+00, -1.583345e+00, 3.604010e+00, -3.259065e+00, -2.595882e+00, 3.253130e+00, -2.756845e+00, -2.469329e+00, 3.784948e+00, -2.283964e+00, -2.021853e+00, 4.316756e+00, -4.290080e-01, -2.287012e+00, 4.741909e+00, -1.373332e+00, -2.481879e+00, 4.469381e+00, 1.725600e-02, -1.739325e+00, 4.995676e+00, 7.586380e-01, -2.235531e+00, 4.732491e+00, 1.662721e+00, -1.951462e+00, 4.625530e+00, 1.718206e+00, -1.148559e+00, 4.860987e+00, 2.059282e+00, -2.785690e+00, 4.001732e+00, 2.570381e+00, -1.841138e+00, 4.231157e+00, 3.000387e+00, -2.531794e+00, 3.551582e+00, 3.868204e+00, -2.249651e+00, 2.840371e+00, 4.424302e+00, -1.269497e+00, 2.603485e+00, 4.875136e+00, -1.246469e+00, 1.653100e+00, 4.601614e+00, -2.172385e+00, 1.438783e+00, 4.961262e+00, -1.596988e+00, 8.552730e-01, 5.173055e+00, -7.246370e-01, 8.349510e-01, 4.207273e+00, -2.360295e+00, 2.181710e+00, 4.175760e+00, -2.943897e+00, 1.371776e+00, 4.670717e+00, -2.416610e+00, 5.973330e-01, 4.706928e+00, -2.369251e+00, -4.809060e-01, 3.277622e+00, -2.358841e+00, -3.406654e+00, 2.858870e+00, -2.863601e+00, -3.407919e+00, 7.531820e-01, -1.434377e+00, -5.032604e+00, -3.779400e-02, -2.255095e+00, -4.796842e+00, -7.786460e-01, -2.033080e+00, -4.826515e+00, -1.579919e+00, -2.071898e+00, -4.599526e+00, -2.888967e+00, -1.951224e+00, -3.973577e+00, -3.517150e+00, -1.353954e+00, -3.702158e+00, -4.215277e+00, -4.485400e-01, -3.168977e+00, -4.168201e+00, -1.305996e+00, -2.982503e+00, -3.434999e+00, -2.084260e+00, -3.436305e+00, -4.713053e+00, -1.815821e+00, -1.553593e+00, -4.432840e+00, -1.756494e+00, -2.289362e+00, -3.868385e+00, -2.478841e+00, -2.625278e+00, -3.323372e+00, -2.976014e+00, -2.860799e+00, -3.844896e+00, -3.281199e+00, -1.566408e+00, -4.916126e+00, -1.802322e+00, -7.236440e-01, -4.511278e+00, -2.504429e+00, -1.212332e+00, -4.201589e+00, -3.117363e+00, -7.417560e-01, -3.842697e+00, -3.607494e+00, -4.888010e-01, 2.518384e+00, -2.324517e+00, -4.014855e+00, 1.520807e+00, -2.226748e+00, -4.553943e+00, 1.249892e+00, -3.139862e+00, -4.067180e+00, 7.070880e-01, -2.409656e+00, -4.661358e+00, -2.377880e+00, -3.252377e+00, 3.430409e+00, -1.499776e+00, -3.696469e+00, 3.480784e+00, -1.589052e+00, -3.016915e+00, 4.040803e+00, -5.847720e-01, -3.684814e+00, 3.748053e+00, -5.181990e-01, -3.130625e+00, 4.227057e+00, 4.193620e-01, -2.878442e+00, 4.423241e+00, 2.142787e+00, -3.482029e+00, 3.368809e+00, 1.415326e+00, -2.956286e+00, 4.156785e+00, 2.888671e+00, -3.383392e+00, 2.866407e+00, 3.334935e+00, -3.435337e+00, 2.274913e+00, 3.927750e+00, -3.445800e+00, 8.439060e-01, 4.087501e+00, -3.366873e+00, -1.320940e-01, 4.251631e+00, -2.919078e+00, -1.164530e+00, 3.581237e+00, -3.877142e+00, 3.176170e-01, 3.745021e+00, -3.243685e+00, -1.848778e+00, 3.501701e+00, -2.975781e+00, -2.609529e+00, 2.554300e+00, -3.470876e+00, -3.075794e+00, 1.726339e+00, -4.260905e+00, -2.631208e+00, 1.990849e+00, -3.075906e+00, -3.811989e+00, 1.418484e+00, -3.911315e+00, -3.278244e+00, 3.830940e-01, -3.908219e+00, -3.563056e+00, 1.164270e-01, -3.259787e+00, -4.164723e+00, -6.720180e-01, -3.226684e+00, -4.148306e+00, -1.356242e+00, -3.362880e+00, -3.845225e+00, -1.722603e+00, -2.716885e+00, -4.203124e+00, -2.625453e+00, -2.864317e+00, -3.602217e+00, -3.130142e+00, -3.955472e+00, -1.624431e+00, -3.532684e+00, -3.741855e+00, 1.272976e+00, -2.873199e+00, -4.417892e+00, 4.451530e-01, -2.457639e+00, -4.518643e+00, 1.293228e+00, -2.337540e+00, -3.974122e+00, 2.594842e+00, -3.052155e+00, -3.692410e+00, 2.229097e+00, 3.438615e+00, -3.969461e+00, -6.174020e-01, 3.621877e+00, -3.650711e+00, -1.256377e+00, 2.645988e+00, -4.464289e+00, -1.053850e+00, 2.846646e+00, -3.872006e+00, -2.225823e+00, 3.759280e-01, -3.476043e+00, 3.969837e+00, 1.053740e+00, -3.782639e+00, 3.546247e+00, 1.536588e+00, -4.131775e+00, 2.918735e+00, 1.120124e+00, -4.648221e+00, 2.262669e+00, 3.264533e+00, -3.880787e+00, 1.524289e+00, 2.333156e+00, -4.134682e+00, 2.343478e+00, 2.699169e+00, -4.452424e+00, 1.021221e+00, 1.612722e+00, -4.723580e+00, 1.784224e+00, 2.861210e+00, -4.456141e+00, 8.380000e-04, 2.019135e+00, -4.874904e+00, -3.959460e-01, 1.489196e+00, -4.848540e+00, -1.523001e+00, 2.126698e+00, -4.515434e+00, -1.750423e+00, 8.048400e-01, -4.651435e+00, -2.388419e+00, 7.682200e-02, -4.489563e+00, -2.810104e+00, -9.380150e-01, -4.085097e+00, -3.241929e+00, -1.222896e+00, -4.579051e+00, -2.369666e+00, -1.977245e+00, -3.785571e+00, -3.134723e+00, -2.795601e+00, -3.624063e+00, -2.669320e+00, -1.860075e+00, -4.698514e+00, -1.619711e+00, -2.661011e+00, -4.449805e+00, -1.079442e+00, -3.095404e+00, -4.294745e+00, -2.166920e-01, -2.169350e+00, -4.782730e+00, -6.408160e-01, -2.054352e+00, -4.879432e+00, 5.737200e-02, 6.153100e-01, -5.008605e+00, -1.605805e+00, -2.201450e-01, -5.208640e+00, -9.042140e-01, -4.238080e-01, -4.922578e+00, -1.919312e+00, -1.152498e+00, -5.139916e+00, -6.368700e-01, -4.840590e-01, -5.273206e+00, 1.950110e-01, -1.004268e+00, -5.146364e+00, 7.722950e-01, -1.539411e+00, -4.966990e+00, 1.010093e+00;
        Base::F.resize(760, 3);
        Base::F << 10, 4, 12, 4, 0, 12, 12, 0, 2, 1, 54, 0, 54, 2, 0, 54, 3, 2, 3, 57, 2, 57, 12, 2, 10, 5, 4, 5, 6, 4, 6, 58, 4, 58, 1, 4, 1, 0, 4, 7, 9, 11, 7, 8, 9, 8, 96, 9, 96, 63, 9, 63, 64, 9, 64, 10, 9, 9, 10, 11, 64, 5, 10, 12, 11, 10, 11, 12, 7, 12, 62, 7, 108, 13, 105, 13, 14, 16, 14, 15, 16, 108, 68, 13, 13, 68, 14, 15, 54, 16, 54, 1, 16, 1, 13, 16, 1, 58, 13, 58, 105, 13, 17, 18, 23, 17, 19, 18, 36, 21, 18, 21, 20, 18, 18, 20, 23, 35, 22, 21, 21, 22, 20, 22, 215, 20, 20, 153, 23, 153, 152, 23, 152, 17, 23, 29, 24, 25, 120, 24, 29, 120, 70, 24, 24, 168, 25, 258, 27, 25, 25, 27, 26, 27, 28, 26, 26, 29, 25, 148, 29, 26, 30, 181, 31, 223, 32, 31, 32, 33, 31, 32, 224, 33, 33, 34, 31, 34, 30, 31, 34, 113, 30, 36, 35, 21, 36, 37, 35, 37, 38, 35, 35, 38, 39, 39, 22, 35, 284, 287, 39, 39, 287, 22, 41, 42, 40, 40, 42, 46, 42, 44, 46, 41, 43, 42, 44, 47, 46, 45, 359, 44, 359, 355, 44, 355, 47, 44, 47, 48, 46, 48, 40, 46, 48, 319, 40, 319, 317, 40, 40, 317, 41, 45, 49, 53, 53, 49, 50, 45, 379, 49, 379, 376, 49, 49, 376, 51, 51, 50, 49, 362, 361, 51, 51, 361, 50, 50, 361, 52, 52, 53, 50, 359, 53, 52, 359, 45, 53, 74, 54, 15, 74, 55, 54, 55, 78, 54, 54, 78, 3, 78, 59, 3, 59, 56, 3, 3, 56, 57, 56, 62, 57, 57, 62, 12, 6, 103, 58, 103, 105, 58, 59, 60, 56, 60, 61, 56, 61, 62, 56, 85, 89, 61, 89, 62, 61, 64, 65, 5, 65, 6, 5, 15, 14, 66, 14, 67, 66, 14, 68, 67, 68, 69, 67, 69, 145, 67, 145, 71, 67, 70, 71, 145, 70, 72, 71, 72, 66, 71, 71, 66, 67, 73, 74, 72, 72, 74, 66, 72, 75, 73, 75, 76, 73, 77, 73, 76, 77, 55, 73, 55, 74, 73, 74, 15, 66, 76, 79, 77, 77, 78, 55, 79, 78, 77, 76, 80, 79, 80, 81, 79, 81, 82, 79, 81, 83, 82, 82, 78, 79, 82, 59, 78, 82, 60, 59, 83, 60, 82, 83, 84, 60, 84, 61, 60, 85, 86, 89, 86, 88, 89, 87, 86, 85, 90, 91, 88, 88, 91, 89, 91, 62, 89, 88, 92, 90, 92, 94, 90, 19, 17, 92, 92, 17, 94, 94, 93, 90, 93, 7, 90, 90, 7, 91, 8, 7, 93, 7, 62, 91, 17, 95, 94, 94, 95, 93, 95, 96, 93, 93, 96, 8, 95, 155, 96, 63, 98, 64, 64, 98, 65, 98, 97, 65, 98, 111, 97, 97, 99, 65, 99, 6, 65, 97, 100, 99, 100, 101, 99, 100, 102, 101, 102, 112, 101, 103, 6, 101, 101, 6, 99, 101, 104, 103, 104, 105, 103, 104, 106, 105, 101, 112, 104, 112, 113, 104, 113, 115, 104, 104, 115, 116, 117, 107, 116, 107, 106, 116, 116, 106, 104, 107, 108, 106, 106, 108, 105, 107, 68, 108, 63, 96, 98, 96, 109, 98, 98, 109, 110, 155, 109, 96, 139, 110, 109, 110, 111, 98, 112, 114, 113, 34, 115, 113, 34, 183, 115, 183, 116, 115, 117, 118, 107, 107, 118, 68, 118, 69, 68, 117, 143, 118, 118, 145, 69, 145, 119, 70, 70, 120, 121, 121, 72, 70, 75, 72, 121, 120, 146, 121, 121, 146, 75, 146, 150, 75, 150, 122, 75, 122, 76, 75, 76, 122, 80, 122, 123, 80, 151, 123, 122, 151, 195, 123, 123, 195, 124, 195, 169, 124, 123, 124, 80, 124, 81, 80, 124, 125, 81, 125, 83, 81, 169, 125, 124, 169, 170, 125, 170, 127, 125, 130, 126, 127, 126, 128, 127, 128, 83, 127, 127, 83, 125, 83, 128, 84, 128, 129, 84, 129, 131, 132, 129, 87, 84, 132, 134, 129, 134, 87, 129, 87, 85, 84, 85, 61, 84, 126, 129, 128, 130, 206, 126, 206, 131, 126, 126, 131, 129, 134, 86, 87, 132, 133, 134, 133, 136, 134, 134, 136, 86, 131, 201, 132, 201, 133, 132, 201, 208, 133, 208, 135, 133, 135, 137, 133, 137, 136, 133, 137, 138, 136, 138, 86, 136, 138, 88, 86, 110, 140, 111, 139, 140, 110, 140, 160, 141, 141, 111, 140, 142, 100, 141, 141, 100, 111, 100, 97, 111, 143, 144, 118, 117, 186, 143, 143, 187, 144, 144, 145, 118, 120, 29, 146, 29, 149, 146, 146, 149, 150, 149, 147, 150, 29, 148, 149, 147, 193, 150, 193, 151, 150, 150, 151, 122, 88, 138, 92, 138, 174, 92, 92, 174, 19, 174, 18, 19, 138, 137, 174, 174, 36, 18, 17, 152, 95, 152, 157, 95, 152, 154, 157, 153, 154, 152, 157, 155, 95, 154, 156, 157, 157, 109, 155, 156, 158, 157, 158, 139, 157, 157, 139, 109, 166, 142, 159, 159, 142, 161, 142, 141, 161, 161, 141, 160, 161, 164, 159, 160, 162, 161, 162, 163, 161, 161, 163, 164, 164, 165, 159, 165, 166, 159, 102, 100, 142, 166, 102, 142, 114, 112, 102, 166, 167, 102, 167, 114, 102, 167, 30, 114, 114, 30, 113, 119, 24, 70, 145, 144, 119, 119, 168, 24, 144, 188, 119, 188, 168, 119, 193, 195, 151, 169, 197, 170, 171, 127, 170, 170, 172, 171, 171, 130, 127, 135, 173, 137, 173, 174, 137, 173, 37, 174, 37, 36, 174, 156, 212, 158, 212, 176, 158, 212, 175, 176, 177, 139, 176, 139, 158, 176, 177, 140, 139, 177, 180, 140, 180, 160, 140, 177, 178, 180, 178, 179, 180, 178, 214, 179, 179, 162, 180, 162, 160, 180, 179, 247, 162, 247, 163, 162, 167, 181, 30, 167, 182, 181, 182, 223, 181, 181, 223, 31, 224, 184, 33, 33, 184, 34, 184, 183, 34, 186, 183, 184, 186, 117, 183, 183, 117, 116, 185, 186, 184, 185, 190, 186, 190, 187, 186, 186, 187, 143, 187, 188, 144, 187, 189, 188, 187, 190, 189, 190, 191, 189, 191, 255, 189, 255, 256, 189, 189, 256, 188, 256, 168, 188, 256, 258, 168, 258, 25, 168, 28, 192, 26, 192, 148, 26, 192, 229, 148, 229, 149, 148, 149, 230, 147, 147, 230, 193, 230, 194, 193, 194, 197, 193, 197, 195, 193, 197, 169, 195, 194, 196, 197, 196, 232, 197, 232, 170, 197, 170, 232, 172, 232, 198, 172, 233, 199, 198, 198, 199, 172, 199, 200, 172, 172, 200, 171, 200, 130, 171, 234, 208, 205, 208, 201, 205, 205, 201, 202, 131, 202, 201, 202, 204, 205, 131, 206, 202, 202, 206, 204, 206, 207, 204, 207, 203, 204, 204, 203, 205, 203, 278, 205, 278, 234, 205, 130, 200, 206, 200, 207, 206, 234, 235, 208, 235, 209, 208, 208, 209, 135, 209, 173, 135, 209, 210, 173, 173, 210, 37, 210, 211, 37, 211, 38, 37, 156, 216, 212, 212, 213, 175, 216, 217, 212, 217, 213, 212, 218, 214, 213, 214, 175, 213, 214, 178, 175, 175, 178, 176, 178, 177, 176, 215, 153, 20, 215, 216, 153, 215, 217, 216, 153, 216, 154, 216, 156, 154, 217, 218, 213, 246, 219, 164, 164, 219, 220, 221, 220, 219, 220, 165, 164, 221, 182, 220, 220, 167, 165, 182, 167, 220, 167, 166, 165, 221, 222, 182, 222, 223, 182, 224, 185, 184, 224, 254, 185, 254, 225, 185, 225, 191, 185, 185, 191, 190, 28, 226, 192, 226, 227, 192, 227, 228, 192, 226, 260, 227, 228, 229, 192, 230, 149, 229, 194, 231, 196, 231, 232, 196, 194, 269, 231, 231, 272, 232, 232, 272, 198, 199, 207, 200, 233, 275, 199, 199, 275, 207, 278, 277, 234, 277, 280, 234, 234, 280, 235, 280, 236, 235, 235, 210, 209, 211, 210, 235, 236, 211, 235, 236, 283, 211, 211, 283, 38, 215, 237, 217, 237, 239, 217, 237, 238, 239, 287, 238, 237, 239, 218, 217, 240, 218, 239, 214, 218, 243, 218, 240, 243, 240, 241, 243, 241, 242, 243, 242, 244, 243, 244, 179, 243, 243, 179, 214, 179, 244, 247, 244, 245, 247, 247, 245, 246, 245, 248, 246, 246, 163, 247, 248, 219, 246, 246, 164, 163, 248, 249, 219, 248, 313, 249, 313, 294, 249, 223, 250, 32, 250, 252, 32, 250, 251, 252, 252, 254, 32, 253, 254, 252, 253, 225, 254, 254, 224, 32, 300, 255, 191, 255, 257, 256, 257, 258, 256, 257, 27, 258, 255, 308, 257, 257, 259, 27, 259, 28, 27, 257, 308, 259, 28, 259, 226, 259, 260, 226, 259, 261, 260, 260, 261, 263, 261, 262, 263, 343, 263, 262, 263, 227, 260, 263, 264, 227, 264, 228, 227, 266, 264, 263, 228, 265, 229, 229, 265, 230, 265, 194, 230, 228, 268, 265, 264, 268, 228, 264, 266, 268, 266, 267, 268, 267, 270, 268, 270, 269, 268, 268, 269, 265, 269, 194, 265, 270, 271, 269, 271, 231, 269, 271, 272, 231, 198, 274, 233, 233, 273, 275, 233, 274, 273, 274, 320, 273, 320, 321, 273, 276, 275, 321, 321, 275, 273, 276, 203, 275, 275, 203, 207, 321, 323, 276, 323, 277, 276, 276, 277, 203, 277, 278, 203, 323, 279, 277, 279, 280, 277, 236, 281, 282, 282, 283, 236, 288, 283, 282, 38, 283, 39, 39, 283, 284, 283, 288, 284, 288, 285, 284, 284, 285, 286, 286, 287, 284, 237, 215, 287, 287, 215, 22, 288, 289, 285, 289, 290, 285, 285, 290, 286, 290, 238, 286, 286, 238, 287, 290, 291, 238, 238, 291, 239, 291, 240, 239, 328, 241, 240, 331, 292, 242, 242, 292, 244, 331, 293, 292, 292, 245, 244, 293, 312, 292, 292, 312, 245, 219, 294, 221, 294, 295, 221, 295, 296, 221, 315, 295, 294, 296, 222, 221, 250, 223, 222, 296, 250, 222, 296, 297, 250, 297, 251, 250, 296, 338, 297, 338, 340, 297, 251, 298, 252, 298, 253, 252, 298, 299, 253, 253, 299, 225, 299, 300, 225, 300, 191, 225, 251, 341, 298, 298, 302, 299, 299, 302, 301, 341, 302, 298, 301, 300, 299, 304, 255, 301, 255, 300, 301, 303, 255, 304, 301, 305, 304, 304, 305, 309, 306, 307, 305, 305, 307, 309, 309, 303, 304, 309, 308, 303, 308, 255, 303, 307, 310, 309, 310, 261, 309, 309, 261, 308, 261, 259, 308, 307, 311, 310, 310, 311, 261, 311, 262, 261, 245, 312, 248, 312, 313, 248, 312, 334, 313, 334, 314, 313, 313, 314, 315, 314, 337, 315, 315, 294, 313, 294, 219, 249, 337, 295, 315, 337, 338, 295, 338, 296, 295, 270, 267, 271, 267, 316, 271, 267, 346, 316, 346, 317, 316, 317, 318, 316, 316, 318, 271, 318, 272, 271, 318, 274, 272, 274, 198, 272, 317, 319, 318, 319, 320, 318, 318, 320, 274, 319, 352, 320, 320, 352, 321, 321, 353, 323, 323, 322, 279, 353, 322, 323, 322, 281, 279, 324, 281, 322, 281, 280, 279, 281, 236, 280, 324, 282, 281, 324, 325, 282, 325, 288, 282, 288, 325, 289, 325, 356, 289, 356, 326, 289, 327, 290, 326, 326, 290, 289, 290, 327, 291, 349, 328, 327, 328, 291, 327, 328, 240, 291, 326, 329, 327, 360, 348, 329, 329, 348, 327, 348, 349, 327, 349, 330, 328, 330, 241, 328, 349, 351, 330, 351, 331, 330, 330, 331, 241, 331, 242, 241, 331, 332, 293, 331, 351, 332, 332, 351, 333, 333, 335, 332, 335, 334, 332, 332, 334, 293, 334, 312, 293, 335, 314, 334, 335, 336, 314, 336, 337, 314, 338, 339, 340, 340, 251, 297, 340, 341, 251, 341, 369, 306, 340, 368, 341, 368, 369, 341, 306, 302, 341, 306, 305, 302, 305, 301, 302, 369, 307, 306, 369, 342, 307, 267, 266, 347, 266, 343, 347, 266, 263, 343, 262, 344, 343, 344, 345, 343, 345, 347, 343, 43, 346, 345, 346, 347, 345, 346, 267, 347, 43, 41, 346, 41, 317, 346, 348, 350, 349, 349, 350, 351, 350, 363, 351, 363, 333, 351, 48, 352, 319, 47, 353, 48, 48, 353, 352, 353, 321, 352, 47, 354, 353, 354, 322, 353, 47, 355, 354, 355, 359, 354, 359, 357, 354, 354, 357, 322, 356, 357, 358, 356, 325, 357, 325, 324, 357, 324, 322, 357, 357, 359, 358, 359, 52, 358, 360, 358, 52, 360, 329, 358, 358, 329, 356, 329, 326, 356, 52, 361, 360, 361, 350, 360, 350, 348, 360, 361, 362, 350, 362, 363, 350, 333, 364, 335, 364, 365, 335, 335, 365, 336, 365, 366, 336, 366, 338, 336, 338, 337, 336, 366, 339, 338, 368, 339, 366, 368, 340, 339, 367, 368, 366, 368, 370, 369, 369, 370, 342, 370, 371, 342, 368, 367, 370, 371, 311, 342, 311, 307, 342, 377, 370, 367, 373, 372, 371, 371, 372, 311, 372, 262, 311, 344, 262, 372, 373, 374, 372, 372, 374, 344, 374, 345, 344, 373, 378, 374, 374, 381, 345, 363, 362, 333, 333, 362, 364, 362, 375, 364, 362, 51, 375, 51, 376, 375, 376, 377, 375, 375, 377, 364, 377, 365, 364, 377, 367, 365, 367, 366, 365, 376, 378, 377, 378, 370, 377, 378, 373, 370, 373, 371, 370, 376, 379, 378, 379, 380, 378, 378, 380, 374, 380, 381, 374, 44, 380, 45, 45, 380, 379, 44, 42, 380, 42, 381, 380, 42, 43, 381, 43, 345, 381;
        
        Base::V.rowwise() -= (Base::V.colwise().maxCoeff() + Base::V.colwise().minCoeff()) / 2;
        Base::V /= (Base::V.col(0).maxCoeff() - Base::V.col(0).minCoeff() / 2 / radius);
        Base::V.rowwise() += Base::origin.transpose();
    }
    
    template class Sphere<DIM>;
}
